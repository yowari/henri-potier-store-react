{"version":3,"sources":["store/shopping-cart.ts","store/app.ts","AppStateProvider.tsx","components/Header/Header.tsx","components/BookQuantity/BookQuantity.tsx","components/BookCard/BookCard.tsx","pages/BooksSearch/BooksSearch.tsx","api/books.ts","services/filter-books.ts","services/shopping-cart.ts","components/ShoppingCartSummary/ShoppingCartSummary.tsx","pages/ShoppingCart/ShoppingCart.tsx","api/commercial-offers.ts","AppRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getShoppingCartItemsCount","shoppingCartState","items","reduce","acc","item","quantity","shoppingCartReducer","state","action","type","indexBookToAdd","findIndex","book","isbn","payload","slice","indexBookToRemove","initialState","shoppingCart","appReducer","AppStateContext","createContext","AppDispatchContext","useAppState","useContext","AppStateProvider","children","useReducer","dispatch","Provider","value","Header","itemsCount","className","to","data-cy","data-testid","BookQuantity","props","onClick","removeFromCart","addToCart","BookCard","src","cover","alt","title","synopsis","map","synopsisParagraph","index","price","BooksSearch","useState","books","setBooks","booksLoading","setBooksLoading","filterText","setFilterText","filteredBooks","setFilteredBooks","useEffect","a","fetch","then","response","json","fetchBooks","lowerFilterText","toLocaleLowerCase","filter","includes","some","s","filterBooks","handleRemoveFromCart","handleAddToCart","placeholder","aria-label","name","onChange","event","target","role","find","i","getBestOffer","total","offers","discounts","offer","Math","floor","sliceValue","Error","getDiscount","minimalPriceIndex","length","discount","ShoppingCartSummary","bestOffer","finalPrice","getFinalPrice","BestOfferRow","ShoppingCart","setBestOffer","commercialOffersLoading","setCommercialOffersLoading","join","commercialOffers","bestOfferResult","undefined","fetchBestOffer","AppRouter","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6039850a.chunk.js","sourcesContent":["import { Book } from '../models/books';\nimport { ShoppingCartItem } from '../models/shopping-cart';\n\nexport interface ShoppingCartState {\n  items: ShoppingCartItem[];\n}\n\nexport const initialState: ShoppingCartState = {\n  items: []\n};\n\nexport type ShoppingCartAction =\n | { type: '[Books Search Page] Add to Cart', payload: Book }\n | { type: '[Books Search Page] Remove from Cart', payload: Book };\n\nexport const getShoppingCartItemsCount = (shoppingCartState: ShoppingCartState): number => {\n  return shoppingCartState.items.reduce((acc, item) => acc + item.quantity, 0);\n};\n\nexport const getTotalPrice = (shoppingCartState: ShoppingCartState) => {\n  return shoppingCartState.items.reduce((acc, item) => acc + (item.quantity * item.book.price), 0);\n}\n\nexport const getShoppingCartItemQuantity = (isbn: string) => {\n  return (shoppingCartState: ShoppingCartState): number => {\n    const item = shoppingCartState.items.find(i => i.book.isbn === isbn);\n\n    if (item) {\n      return item.quantity;\n    } else {\n      return 0;\n    }\n  };\n}\n\nexport default function shoppingCartReducer(state: ShoppingCartState, action: ShoppingCartAction): ShoppingCartState {\n  switch (action.type) {\n    case '[Books Search Page] Add to Cart':\n      const indexBookToAdd = state.items.findIndex(item => item.book.isbn === action.payload.isbn);\n\n      if (indexBookToAdd >= 0) {\n        return {\n          ...state,\n          items: [\n            ...state.items.slice(0, indexBookToAdd),\n            {\n              book: action.payload,\n              quantity: state.items[indexBookToAdd].quantity + 1\n            },\n            ...state.items.slice(indexBookToAdd + 1)\n          ]\n        };\n      } else {\n        return {\n          ...state,\n          items: [\n            ...state.items,\n            {\n              book: action.payload,\n              quantity: 1\n            }\n          ]\n        };\n      }\n\n    case '[Books Search Page] Remove from Cart':\n      const indexBookToRemove = state.items.findIndex(item => item.book.isbn === action.payload.isbn);\n\n    if (indexBookToRemove >= 0) {\n      if (state.items[indexBookToRemove].quantity - 1 === 0) {\n        return {\n          ...state,\n          items: [\n            ...state.items.slice(0, indexBookToRemove),\n            ...state.items.slice(indexBookToRemove + 1)\n          ]\n        };\n      } else {\n        return {\n          ...state,\n          items: [\n            ...state.items.slice(0, indexBookToRemove),\n            {\n              book: action.payload,\n              quantity: state.items[indexBookToRemove].quantity - 1\n            },\n            ...state.items.slice(indexBookToRemove + 1)\n          ]\n        };\n      }\n    } else {\n      return state;\n    }\n  }\n  return state;\n}\n","import shoppingCartReducer, {\n  ShoppingCartAction,\n  ShoppingCartState,\n  initialState as shoppingCartInitialState\n} from './shopping-cart';\n\nexport interface AppState {\n  shoppingCart: ShoppingCartState;\n}\n\nexport const initialState: AppState = {\n  shoppingCart: shoppingCartInitialState\n}\n\nexport type AppAction =\n | ShoppingCartAction;\n\nexport default function appReducer(state: AppState, action: AppAction): AppState {\n  return {\n    shoppingCart: shoppingCartReducer(state.shoppingCart, action)\n  };\n}\n","import {\n  createContext,\n  Dispatch,\n  useContext,\n  useReducer\n} from 'react';\nimport appReducer, { AppAction, AppState, initialState } from './store/app';\n\nexport const AppStateContext = createContext<AppState>(initialState);\nexport const AppDispatchContext = createContext<Dispatch<AppAction>>(null as unknown as Dispatch<AppAction>);\n\nexport function useAppState(): AppState {\n  return useContext(AppStateContext);\n}\n\nexport function useAppDispatch(): Dispatch<AppAction> {\n  return useContext(AppDispatchContext);\n}\n\nexport default function AppStateProvider({children}: any) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  return (\n    <AppStateContext.Provider value={state}>\n      <AppDispatchContext.Provider value={dispatch}>\n        {children}\n      </AppDispatchContext.Provider>\n    </AppStateContext.Provider>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport interface HeaderProps {\n  itemsCount: number;\n}\n\nexport default function Header({ itemsCount }: HeaderProps) {\n\n  return (\n    <header className=\"navbar navbar-light bg-white sticky-top border-bottom\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Henri Potier Store</Link>\n\n        <Link\n         className=\"btn btn-outline-primary\"\n         to=\"/shopping-cart\"\n         data-cy=\"cartButton\">\n          {itemsCount > 0 &&\n            <><span className=\"badge rounded-pill bg-primary\" data-testid=\"itemsCount\">{itemsCount}</span>{' '}</>\n          }\n          Panier\n        </Link>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport interface BookQuantityProps {\n  quantity: number;\n  removeFromCart: () => void;\n  addToCart: () => void;\n}\n\nexport default function BookQuantity(props: BookQuantityProps) {\n  return (\n    <div className=\"d-grid\">\n      {props.quantity > 0\n        ? <div className=\"row g-0 bg-light border rounded\">\n            <button className=\"btn btn-primary col-3\" onClick={props.removeFromCart} data-cy=\"removeFromCart\">-</button>\n            <div className=\"col text-center d-flex flex-column justify-content-center align-items-center\">\n              <div>{props.quantity}</div>\n            </div>\n            <button className=\"btn btn-primary col-3\" onClick={props.addToCart} data-cy=\"addToCart\">+</button>\n          </div>\n        : <button className=\"btn btn-primary\" onClick={props.addToCart} data-cy=\"addToCart\">Ajouter au Panier</button>\n      }\n    </div>\n  );\n}\n","import React from 'react';\n\nimport BookQuantity from '../BookQuantity/BookQuantity';\nimport { Book } from '../../models/books';\n\nexport interface BookCardProps {\n  book: Book;\n  quantity: number;\n  removeFromCart: (book: Book) => void;\n  addToCart: (book: Book) => void;\n}\n\nexport default function BookCard({ book, quantity, removeFromCart, addToCart }: BookCardProps) {\n\n  const handleRemoveFromCart = () => {\n    removeFromCart(book);\n  };\n\n  const handleAddToCart = () => {\n    addToCart(book);\n  };\n\n  return (\n    <article className=\"book-item card my-4\">\n      <div className=\"row g-0\">\n\n        <div className=\"book-item__cover book-cover col-md-2 text-center\">\n          <img src={book.cover}\n               className=\"book-cover__image img-fluid p-2\"\n               alt={book.title} />\n        </div>\n\n        <div className=\"book-item__info book-info card-body col-md-8\">\n          <h5 className=\"book-info__title card-title\">{book.title}</h5>\n          <div className=\"book-info__summary overflow-auto\">\n            {book.synopsis.map((synopsisParagraph, index) =>\n              <p key={index} className=\"card-text\">{synopsisParagraph}</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"book-item__action book-action col-md-2 border-start p-3\">\n          <div className=\"book-action__price mb-4 fs-5\">\n            prix: <strong>{book.price}&euro;</strong>\n          </div>\n\n          <div className=\"book-action__add\">\n            <BookQuantity quantity={quantity} removeFromCart={handleRemoveFromCart} addToCart={handleAddToCart} />\n          </div>\n        </div>\n\n      </div>\n    </article>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport BookCard from '../../components/BookCard/BookCard';\nimport { getAllBooks } from '../../api/books';\nimport { Book } from '../../models/books';\nimport { useAppDispatch, useAppState } from '../../AppStateProvider';\nimport { getShoppingCartItemQuantity } from '../../store/shopping-cart';\nimport { filterBooks } from '../../services/filter-books';\n\nexport default function BooksSearch() {\n  const state = useAppState();\n  const dispatch = useAppDispatch();\n\n  const [books, setBooks] = useState<Book[]>([]);\n  const [booksLoading, setBooksLoading] = useState(false);\n  const [filterText, setFilterText] = useState('');\n  const [filteredBooks, setFilteredBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    const fetchBooks = async () => {\n      setBooksLoading(true);\n      const books = await getAllBooks();\n      setBooks(books);\n      setBooksLoading(false);\n    };\n    fetchBooks();\n  }, []);\n\n  useEffect(() => {\n    const filteredBooks = filterBooks(books, filterText);\n    setFilteredBooks(filteredBooks);\n  }, [books, filterText]);\n\n  const handleRemoveFromCart = (book: Book) => {\n    dispatch({ type: '[Books Search Page] Remove from Cart', payload: book });\n  };\n\n  const handleAddToCart = (book: Book) => {\n    dispatch({ type: '[Books Search Page] Add to Cart', payload: book });\n  };\n\n  const handleFilterTextChange = (event: any) => {\n    setFilterText(event.target.value);\n  };\n\n  return (\n    <>\n      <div className=\"my-4\">\n        <input className=\"form-control\"\n               type=\"search\"\n               placeholder=\"Rechercher un livre...\"\n               aria-label=\"Rechercher un livre\"\n               name=\"searchText\"\n               value={filterText}\n               onChange={handleFilterTextChange}\n               data-cy=\"searchText\" />\n      </div>\n\n      {!booksLoading\n        ? filteredBooks.map((book, index) => <BookCard key={index} book={book} removeFromCart={handleRemoveFromCart} addToCart={handleAddToCart} quantity={getShoppingCartItemQuantity(book.isbn)(state.shoppingCart)} />)\n        : <div className=\"text-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n      }\n    </>\n  );\n}\n","import { Book } from '../models/books';\n\nconst baseUrl = 'https://henri-potier.techx.fr';\n\nexport function getAllBooks(): Promise<Book[]> {\n  return fetch(`${baseUrl}/books`)\n    .then((response) => response.json()) as Promise<Book[]>;\n}\n","import { Book } from '../models/books';\n\nexport function filterBooks(books: Book[], filterText: string): Book[] {\n  const lowerFilterText = filterText.toLocaleLowerCase();\n  return books.filter(book =>\n    book.title.toLocaleLowerCase().includes(lowerFilterText) ||\n    book.synopsis.some(s => s.toLocaleLowerCase().includes(lowerFilterText))\n  );\n}\n","import { BestOffer, Offer } from '../models/commercial-offers';\n\nexport function getBestOffer(total: number, offers: Offer[]): BestOffer {\n  const discounts = offers.map(offer => getDiscount(total, offer));\n  let minimalPriceIndex = 0;\n\n  for (let i = 0; i < discounts.length; i++) {\n    if (discounts[i] > discounts[minimalPriceIndex]) {\n      minimalPriceIndex = i;\n    }\n  }\n\n  return {\n    offer: offers[minimalPriceIndex],\n    discount: discounts[minimalPriceIndex]\n  };\n}\n\nexport function getDiscount(total: number, offer: Offer): number {\n  switch (offer.type) {\n    case 'minus':\n      return offer.value;\n    case 'percentage':\n      return total * (offer.value / 100);\n    case 'slice':\n        return Math.floor(total / offer.sliceValue) * offer.value;\n    default:\n      throw new Error('Unrecognized offer type');\n  }\n}\n","import React from 'react';\n\nimport { BestOffer } from '../../models/commercial-offers';\nimport { ShoppingCartItem } from '../../models/shopping-cart';\n\nexport interface ShoppingCartSummaryProps {\n  items: ShoppingCartItem[];\n  total: number;\n  bestOffer?: BestOffer;\n}\n\nexport default function ShoppingCartSummary({ items, total, bestOffer }: ShoppingCartSummaryProps) {\n  const finalPrice = getFinalPrice(total, bestOffer);\n\n  return (\n    <table className=\"table\" >\n      <tbody>\n        {items.map((item, index) =>\n          <tr key={index} data-cy=\"shoppingCartItem\">\n            <td>{item.book.title}</td>\n            <td className=\"text-end\">{item.quantity} x {item.book.price}&euro;</td>\n          </tr>\n        )}\n      </tbody>\n      <tfoot>\n        {bestOffer &&\n          <tr className=\"text-danger\">\n            <td>\n              <BestOfferRow bestOffer={bestOffer} />\n            </td>\n            <td className=\"text-end\">-{bestOffer.discount}&euro;</td>\n          </tr>\n        }\n        <tr>\n          <td>Total</td>\n          <td className=\"text-end\">\n            {bestOffer &&\n              <><span className=\"text-decoration-line-through\">{total}&euro;</span>&nbsp;</>\n            }\n            <span>{finalPrice}&euro;</span>\n          </td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n}\n\nfunction getFinalPrice(total: number, bestOffer?: BestOffer): number {\n  if (bestOffer && total) {\n    return total - bestOffer.discount;\n  } else {\n    return total;\n  }\n}\n\nfunction BestOfferRow({ bestOffer }: { bestOffer: BestOffer }) {\n  switch (bestOffer.offer.type) {\n    case 'percentage':\n      return <>Offre -{bestOffer.offer.value / 100}&euro;</>\n    case 'minus':\n      return <>Offre -{bestOffer.offer.value}&euro;</>\n    case 'slice':\n      return <>Offre -{bestOffer.offer.value} chaque {bestOffer.offer.sliceValue}&euro;</>\n    default:\n      return <>Incorrect offer</>\n  }\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { getCommercialOffers } from '../../api/commercial-offers';\nimport { getBestOffer } from '../../services/shopping-cart';\nimport { useAppState } from '../../AppStateProvider';\nimport ShoppingCartSummary from '../../components/ShoppingCartSummary/ShoppingCartSummary';\nimport { BestOffer } from '../../models/commercial-offers';\nimport { getShoppingCartItemsCount, getTotalPrice } from '../../store/shopping-cart';\n\nexport default function ShoppingCart() {\n  const state = useAppState();\n  const [bestOffer, setBestOffer] = useState<BestOffer>();\n  const [commercialOffersLoading, setCommercialOffersLoading] = useState<boolean>(false);\n\n  const items = state.shoppingCart.items;\n  const itemsCount = getShoppingCartItemsCount(state.shoppingCart);\n  const total = getTotalPrice(state.shoppingCart);\n\n  useEffect(() => {\n    const fetchBestOffer = async () => {\n      setCommercialOffersLoading(true);\n      if (items.length > 0) {\n        const commercialOffers = await getCommercialOffers(items.map(i => i.book.isbn));\n        if (commercialOffers.offers.length > 0) {\n          const bestOfferResult = getBestOffer(total, commercialOffers.offers);\n          setBestOffer(bestOfferResult);\n        } else {\n          setBestOffer(undefined);\n        }\n      }\n      setCommercialOffersLoading(false);\n    };\n    fetchBestOffer();\n  }, [items, total]);\n\n  return (\n    <div className=\"row my-4\">\n      <div className=\"card col-md-8\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">Panier ({itemsCount} Livres)</h4>\n          {!commercialOffersLoading\n            ? (items.length > 0)\n              ? <ShoppingCartSummary items={items} total={total} bestOffer={bestOffer} />\n              : 'Votre panier est vide'\n            : <div className=\"text-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>\n              </div>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { CommercialOffers } from '../models/commercial-offers';\n\nconst baseUrl = 'https://henri-potier.techx.fr';\n\nexport function getCommercialOffers(isbn: string[]): Promise<CommercialOffers> {\n  return fetch(`${baseUrl}/books/${isbn.join(',')}/commercialOffers`)\n    .then((response) => response.json()) as Promise<CommercialOffers>;\n}\n","import React from 'react';\nimport {\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport { useAppState } from './AppStateProvider';\nimport Header from './components/Header/Header';\nimport BooksSearch from './pages/BooksSearch/BooksSearch';\nimport ShoppingCart from './pages/ShoppingCart/ShoppingCart';\nimport { getShoppingCartItemsCount } from './store/shopping-cart';\n\nexport default function AppRouter() {\n  const state = useAppState();\n\n  return (\n    <>\n      <Header itemsCount={getShoppingCartItemsCount(state.shoppingCart)} />\n      <main className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <BooksSearch />\n          </Route>\n          <Route path=\"/shopping-cart\">\n            <ShoppingCart />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  )\n}\n","import React from 'react';\nimport {\n  BrowserRouter\n} from 'react-router-dom';\n\nimport './App.css';\nimport AppStateProvider from './AppStateProvider';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AppStateProvider>\n\n        <AppRouter />\n\n      </AppStateProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}